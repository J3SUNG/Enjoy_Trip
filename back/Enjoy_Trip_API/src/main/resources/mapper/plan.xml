<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="com.ssafy.trip.model.mapper.PlanMapper">
	<resultMap type="PlanDto" id="plan">
		<result column="plan_no" property="planNo"/>
		<result column="create_time" property="createTime"/>
		<result column="subject" property="subject"/>
		<result column="content" property="content" />
		<result column="start_date" property="startDate"/>
		<result column="end_date" property="endDate"/>
		<result column="read_count" property="readCount"/>
		<result column="user_no" property="userNo"/>
		<result column="nickname" property="nickname" />
		<result column="isLike" property="isLike" />
		<result column="like_count" property="likeCount" />
		<!-- <collection property="fileInfos" column="planNo"
			javaType="list" ofType="FileInfoDto" select="fileInfoList" /> -->
	</resultMap>
	
	<select id="get" parameterType="map" resultMap="plan">
		select p.plan_no, create_time, subject, content, start_date, end_date, 
		read_count, p.user_no, nickname, count(pl.like_no) like_count, ifnull(isLike, 0) isLike
		from plan p
		join user u
		on p.user_no = u.user_no
		left join plan_like pl
		on p.plan_no = pl.plan_no
		left join 
		(select  plan_no, count(*) isLike from plan_like where user_no = #{userNo} group by plan_no) pll
		on p.plan_no = pll.plan_no
		where p.plan_no = #{planNo}
	</select>
	
	
	<select id="list" parameterType="int" resultMap="plan">
		select * 
        from trip t
        join attraction_info a using(attraction_no)
        right join
        (select p.plan_no, create_time, subject, content, start_date, end_date, 
		read_count, p.user_no, nickname, count(pl.like_no) like_count, ifnull(isLike, 0) isLike
		from plan p
		join user u
		on p.user_no = u.user_no
		left join plan_like pl
		on p.plan_no = pl.plan_no
		left join 
		(select  plan_no, count(*) isLike from plan_like where user_no = 1 group by plan_no) pll
		on p.plan_no = pll.plan_no
		group by p.plan_no) o
        on t.plan_no = o.plan_no
        where t.order = 1;
	</select> <!-- 수정 필요함!!!!!!!!!!!******************** -->
	
	<select id="likelist" parameterType="int" resultMap="plan">
		select p.plan_no, create_time, subject, content, start_date, end_date, 
		read_count, p.user_no, nickname, count(pl.like_no) like_count, ifnull(isLike, 0) isLike
		from plan p
		join user u
		on p.user_no = u.user_no
		left join plan_like pl
		on p.plan_no = pl.plan_no
		left join 
		(select  plan_no, count(*) isLike from plan_like where user_no = #{userNo} group by plan_no) pll
		on p.plan_no = pll.plan_no
		group by p.plan_no
		order by like_count desc
		limit 10;
	</select>
	
	<select id="writelist" parameterType="int" resultMap="plan">
		select p.plan_no, create_time, subject, content, start_date, end_date, 
		read_count, p.user_no, nickname, count(pl.like_no) like_count, ifnull(isLike, 0) isLike
		from plan p
		join user u
		on p.user_no = u.user_no
		left join plan_like pl
		on p.plan_no = pl.plan_no
		left join 
		(select  plan_no, count(*) isLike from plan_like where user_no = #{userNo} group by plan_no) pll
		on p.plan_no = pll.plan_no
		where p.user_no = #{userNo}
        group by p.plan_no
        ;
	</select>
	
	<insert id="write" parameterType="PlanDto">
		insert into plan 
		values(null,now(),#{subject},#{content},#{startDate},
		#{endDate},0,#{userNo})
		<selectKey resultType="int" keyProperty="planNo"
			order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	<!-- <insert id="fileRegister" parameterType="PlanDto">
		insert into file_plan(plan_no, save_folder, original_file, save_file)
		values
		<foreach collection="fileInfos" item="fileinfo"
			separator=" , ">
			(#{planNo}, #{fileinfo.saveFolder}, #{fileinfo.originalFile},
			#{fileinfo.saveFile})
		</foreach>
	</insert> -->

	<update id="modify" parameterType="PlanDto">
		update plan
		set subject = #{subject}, content = #{content}, start_date = #{startDate}, end_date = #{endDate}
		where plan_no = #{planNo}
	</update>
	
	<delete id="delete" parameterType="int">
		delete from plan
		where plan_no = #{planNo}
	</delete>
	
	<update id="updateHit" parameterType="int">
		update plan
		set read_count = read_count+1
		where plan_no = #{planNo}
	</update>
</mapper>